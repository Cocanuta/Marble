AHELP=\
Command : AHELP\n\r\
Usage   : AHELP [TOPICNAME]\n\r\
Example : ahelp ahelp\n\r\
Short(s): \n\r\
A command to view the Administrative help commands.

AFFECT=\
Command : AFFECT\n\r\
Usage   : AFFECT ([TARGET])\n\r\
Example : affect\n\r\
Example : affect room\n\r\
Example : affect area\n\r\
Example : affect orc\n\r\
Short(s): AFF\n\r\
List the spell or other affects that your character is currently \
under the influence of.  If targeted, it will show what the given \
target is affected by.
    
AREAS=See the normal HELP AREAS for usage information. \
The Archon version of this command will color the area names based \
on whether the area is active or passive, frozen or stopped.  Also, \
area names will be in parenthesis if they are currently Hidden from \
normal users.

TICKTOCK=\
Command : TickTock\n\r\
Usage   : [NUM HOURS]/CLANTICK/[THREAD NAME]\n\r\
Example : ticktock 10\n\r\
Example : ticktock -4\n\r\
Example : ticktock CLANTICK\n\r\
Example : ticktock THPLAYERS0\n\r\
Advance the time by specified number of hours, or cause one of the \
specified maintenance threads to immediately go through a cycle.  \
Use LIST REPORTS to get a list of maintenance threads.

ATOPICS=\
Command : ATOPICS\n\r\
Usage   : ATOPICS [TOPICNAME]\n\r\
Example : atopics\n\r\
Short(s): \n\r\
A command to view the Administrative help topics.\n\r\

ANNOUNCE=\
Command : ANNOUNCE\n\r\
Usage   : ANNOUNCE message\n\r\
Usage   : ANNOUNCETO [ALL/HERE/PLAYER NAME] message\n\r\
Usage   : ANNOUNCEMSG new personalized announce message prefix\n\r\
Example : announce A new area is discovered!\n\r\
Example : announceto all A new area is discovered!\n\r\
Example : announceto bob Hi Bob!\n\r\
Example : announcemsg A squeeky voice screeches \n\r\
Short(s): \n\r\
A command to make annoucements to players -- even those \
who don't want to be announced to.  This command can be \
used to announce to all players or selected players using \
the announceto syntax.  This is also the command used \
to personalize your announce prefix message by using the \
announcemsg syntax.

AS=\
Command : AS\n\r\
Usage   : AS [PLAYERNAME/MOBNAME] (HERE) [COMMAND]\n\r\
Example : as "bob" inventory\n\r\
Example : as bob here drop all\n\r\
Example : as bob cast fireball monster\n\r\
Short(s): \n\r\
A command that allows one to issue other commands as if they \
were another player or mob.  This is the best way to manage \
a players inventory or bank accounts from the command line. \
The optional "here" parameter should follow the name if the \
command is to be issued with the player in the same room as the \
archon.

AT=\
Command : AT\n\r\
Usage   : AT [ROOM ID/DESC/MOB/AREA] [COMMAND]\n\r\
Example : at "the greasy pub" smile\n\r\
Example : at Midgaard#3001 bow\n\r\
Example : at bob cast fireball bob\n\r\
Short(s): \n\r\
A command that allows one to issue other commands elsewhere in the \
mud.


BAN=\
Command : BAN\n\r\
Usage   : BAN [PLAYER TYPE/IP ADDRESS]\n\r\
Example : ban bob\n\r\
Example : ban io.com\n\r\
Example : ban isp3.io.com\n\r\
Example : ban 123.32.23.1\n\r\
Example : ban 123.32.23.*\n\r\
Example : ban *the great\n\r\
Example : ban *penis*\n\r\
Short(s): \n\r\
A command to ban the given player or ip address from the \
system.  See also LIST, DESTROY
	
BOOT=\
Command : BOOT\n\r\
Usage   : BOOT [PLAYER NAME/IP ADDRESS]\n\r\
Example : boot bob\n\r\
Example : boot 192.168.0.1\n\r\
Short(s): \n\r\
A command to boot off a player.
	
BEACON=\
Command : BEACON\n\r\
Usage   : BEACON ([PLAYER TYPE])\n\r\
Example : beacon\n\r\
Example : beacon bob\n\r\
Short(s): \n\r\
A command to change the start room of a player.  If no player \
is named, this command will change their own start room to the room \
they occupy.  If a player is named, this command changes the players \
start room to the room the player currently occupies.
	
BUG=\
Command : BUG\n\r\
Usage   : BUG [MESSAGE]/REVIEW (STARTING MSG)\n\r\
Example : bug nothing is spelled right in this room!\n\r\
Example : bug review\n\r\
Example : bug review 7\n\r\
Short(s): \n\r\
This command can be used to submit bugs to the system.  When \
the REVIEW parameter is given, the bugs will be iterated through \
one at a time to give the archon a chance to delete, comment on, \
or email each one.  An optional starting number can be given to REVIEW.

CATALOG=\
Command  : CATALOG\n\r\
Usage    : CATALOG LIST (MOBS/ITEMS/) (NAME MASK)\n\r\
Usage    : CATALOG (DELETE) [ITEM/MOB NAME]\n\r\
Usage    : CATALOG (ROOM/AREA/WORLD) (MOBS/ITEMS/)\n\r\
Usage    : CATALOG EDIT [ITEM NAME]\n\r\
Usage    : CATALOG SCAN/DBSCAN (ROOM/AREA/WORLD) (MOBS/ITEMS/)\n\r\
Usage    : CATALOG OVERLOOK/DBOVERLOOK (ROOM/AREA/WORLD) (MOBS/ITEMS/)\n\r\
Example  : catalog list\n\r\
Example  : catalog list mobs the st\n\r\
Example  : catalog the waiter\n\r\
Example  : catalog delete the waiter\n\r\
Example  : catalog edit the sword\n\r\
Example  : catalog room mobs\n\r\
Example  : catalog scan area\n\r\
Example  : catalog dboverlook area mobs\n\r\
Short(s) : \n\r\
This command is used to manage your muds global catalog of generic mobs and/or items. \
The catalog is a place where you can store templates of mobs and items for reuse, \
or for quick global modification and analysis.  Mobs and items in your catalog \
can be changed globally simply by creating and then changing any instance of one \
of them.  You can create \
new instances of a cataloged object simply by entering CREATE <cataloged object name>. \
Your catalog is keyed by name, so once the name of a cataloged item or mob is set, it \
should not be changed. \
\n\r\n\r\
You may review the objects in your catalog using the catalog list command. You can also \
check the catalog synchronicity of the objects in your live rooms with scan, or your \
saved rooms with dbscan.  You can check for uncataloged objects in live rooms with the \
overlook parameter, or in your saved rooms with dboverlook. \
\n\r\n\r\
You may delete an object from your catalog to stop using it as a global template. \
Deleting an object from the catalog only detaches instances of a cataloged object from \
all others, but does not destroy any actual instances.\
\n\r\n\r\
The catalog is also used to manage a global random item-drop table.  Items can be set to \
randomly appear in the inventories of selected mobs when those mobs are brought to life, or \
at the moment of their death. Use CATALOG EDIT <item name> to change drop settings.

CLOAK=\
Command  : CLOAK\n\r\
Usage    : CLOAK (OFF)\n\r\
Example  : cloak\n\r\
Example  : cloak off\n\r\
Short(s) : \n\r\
Cloak makes the player unable to be seen in the WHO list.  They can \
still be seen by players in the same room, however.

COPY=\
Command : COPY\n\r\
Usage   : COPY ([NUMBER]) [ITEM TYPE]/[DIRECTION] \n\r\
Example : copy joe\n\r\
Example : copy beast sword\n\r\
Example : copy Longsword@room\n\r\
Example : copy Longsword@an orc\n\r\
Example : copy east\n\r\
Short(s): \n\r\
A command for the creation of items, mobs, and rooms. \
Enter COPY for more information on command usage.
	
CREATE=\
Command : CREATE\n\r\
Usage   : CREATE [ITEM TYPE] ... \n\r\
Example : create room e StdRoom\n\r\
Example : create item Longsword\n\r\
Example : create item Longsword@room\n\r\
Example : create item Longsword@an orc\n\r\
Example : create StdExit east\n\r\
Example : create news\n\r\
Short(s): \n\r\
A command for the creation of items, mobs, quests, rooms, polls, exits, classes, races, etc. \
Enter CREATE for more information on command usage on items, mobs, components, and exits. \
Use AHELP QUESTS for more information on creating quests.  
	
DESTROY=\
Command : DESTROY\n\r\
Usage   : DESTROY [ITEM TYPE] ... \n\r\
Example : destroy room e\n\r\
Example : destroy orc\n\r\
Example : destroy item longsword\n\r\
Example : destroy item longsword@an orc\n\r\
Short(s): \n\r\
A command for the destruction of items, quests, components, mobs, rooms, exits, polls, classes, races, \
and listed bugs, typos, ideas, and ban. \
Enter DESTROY for more information on command usage.
	
DEVIATIONS=\
Command : DEVIATIONS\n\r\
Usage   : DEVIATIONS [MOBS/ITEMS/BOTH] [MASK]/ROOM/AREA \n\r\
Example : deviations mobs area\n\r\
Short(s): \n\r\
A command for showing items in a room or area, and how they \
deviate from established norms for their type and level.
	
EXPIRE=\
Command : EXPIRE\n\r\
Usage   : EXPIRE [PLAYERNAME] ([NEW DAYS REMAINING]) \n\r\
Example : expire bob\n\r\
Example : expire bob 15\n\r\
Short(s): \n\r\
This command sets and displays the amount of active days a user has left.  This command \
is only relevant if the account expiration system is enabled in your marblemud.ini file.

GENERATE=\
Command : GENERATE\n\r\
Usage   : GENERATE [OBJ TYPE] [ID] (FROM [FILENAME]) ([VAR]=[VAL]...) ([DIRECTION])\n\r\
Example : generate area maze_dungeon from examples/randomdata.xml areasize=50 areaname=test \
level_range=10?20 aggrochance=50 theme=kobolds south\n\r\
Example : generate string list\n\r\
\n\r\
This command uses an xml file to generate random content for your mud.  This content can \
be anything from whole areas, to rooms, mobs, items, or simple strings. By default, the \
content is built from the file in resources/examples/randomdata.xml, though the builder \
may specify his or her own xml file path as one of the many arguments.  The arguments, \
briefly, are:\n\r\
\n\r\
OBJ TYPE: One of the following: AREA, ROOM, MOB, ITEM, or STRING.\n\r\
\n\r\
ID      : one of the "id" xml attributes defined on any tag in the XML file. \
Use GENERATE STRING LIST for a list of all "id" attributes defined in your file.\n\r\
\n\r\
FROM "F": An optional argument to specify your own xml file, with the resources \
directory being the default root.\n\r\
\n\r\
VAR=VAL : One or more variables and their definitions.  Many tags will have a specific set of required \
variables which must be defined in order for the content to be generated.  Failing to specify \
one of the required variables will cause an error message listing the variables which must \
be defined, and the type of data required for the variable.  Variable types which list numbers \
as their data types may also have math expressions values (so you can use random numbers).  See \
the help on MATH EXPRESSION for more information on this.  In addition to required variables, you \
may also use the space to enter one or more "override" values.  Many object fields (such as LEVEL \
for mobs and items, or NAME, etc) as well as the XML id tags, can have their "random" values overridden \
by defining them using the generate command.\n\r\
\n\r\
DIRECTION: This applies only to ROOM and AREA object types.  The object, if successfully generated, will \
be linked to the current room that the player is standing in, in the direction they specify.\n\r\
\n\r\
In closing, the GENERATE command is an interesting way to deliver large amounts of dynamic content \
for your world, though it can never replace the caring touch of a real, creative builder.  If \
anyone is interested in writing their own xml content, please open up the examples/randomdata.xml \
file and begin reading. Use that file as an example on how to construct your own.

I3_CHANNELS=\
Command  : I3 CHANNELS\n\r\
Usage    : I3 CHANNELS\n\r\
Example  : i3 channels\n\r\
Short(s) : \n\r\
Lists all the channels available on the InterMud3 network, even those \
which your mud does not subscribe to.

RESET_ROOM=RESET
RESET_AREA=RESET
RESET_REJUV=RESET
RESET_MOBSTATS=RESET
RESET_ITEMSTATS=RESET
RESET=\
Command  : RESET\n\r\
Usage    : RESET (REJUV) ROOM/AREA (ITEMS/MOBS)\n\r\
Usage    : RESET MOBSTATS ROOM/AREA/WORLD/CATALOG (NOSAVE) ([AREANAME])\n\r\
Usage    : RESET ITEMSTATS ROOM/AREA/WORLD/CATALOG (NOSAVE) ([AREANAME])\n\r\
Usage    : RESET INIFILE\n\r\
Example  : reset room\n\r\
Example  : reset area\n\r\
Example  : reset rejuv area items\n\r\
Example  : reset mobstats world\n\r\
Example  : reset itemstats catalog nosave midgaard\n\r\
Short(s) : \n\r\
The reset room or area command will revive any wandered or \
dead mobs whose location is the same as the invokers.  Any \
removed items which are resettable will also return.  Any items \
or mobs which do not belong in the location will be returned to \
their proper homes.\n\r\
\n\r\
The reset rejuv room or area command will revive any dead mobs or \
resettable items at the location of the invoker.  Mobs that have \
wandered away will not be returned.  No other mobs or items in the \
room will be affected.\n\r\
\n\r\
The reset itemstats and reset mobstats commands serve a similar \
purpose.  Both will modify the vital statistics of all the mobs \
or items in the room, area, world, or catalog specified.  The \
statistics will be "normalizations" of vital combat scores based \
on the mob or items level, and the game engine's definition of \
nominal ratings for that level.  They will \
allow a "preview" of changes to be made by specifying the "nosave" \
parameter on the command line, which prevents permanent changes.  \
Area names may also be specified on the command line to cause the \
command to skip certain areas (for use with WORLD parameter only).\n\r\
\n\r\
You can also reload your ini settings, or the lists.ini file using \
reset inifile.

LIST=\
Command : LIST\n\r\
Usage   : LIST ([SHOPKEEPER])\n\r\
Example : list\n\r\
Example : list quests\n\r\
Example : list reports\n\r\
Example : list areas\n\r\
Example : list log last 10\n\r\
Short(s): \n\r\
The normal player version of this command will display the items \
which a particular shopkeeper MOB may be selling, along with the \
prices being offered to your characters. \n\r\
\n\r\
The Admin version can also be qualified with UNLINKEDEXITS, ITEMS, ARMOR, ENVRESOURCES, \
WEAPONS, MOBS, ROOMS, AREA, LOCALES, BEHAVIORS, EXITS, RACES, CLASSES, STAFF, \
SPELLS, SONGS, PRAYERS, PROPERTIES, THIEFSKILLS, COMMON, JOURNALS, SKILLS, \
QUESTS, DISEASES, POISONS, TICKS, MAGIC, TECH, CLANITEMS, COMMANDJOURNAL, \
TITLES, NOPURGE, BANNED, RACECATS, LOG, USERS, LINKAGES, REPORTS, THREADS, \
RESOURCES, ONEWAYDOORS, CHANTS, POWERS, SUPERPOWERS, CLANS, GOVERNMENTS, \
FACTIONS, MATERIALS, OBJCOUNTERS, POLLS, CONTENTS, BUGS, TYPOS, IDEAS, TASKS, \
NEWS, AREAS, or ASSISTS. depending upon the listers security.

ASSIST=A COMMAND JOURNAL.  See Archon Help (AHELP) on COMMAND JOURNALS
IDEA=A COMMAND JOURNAL.  See Archon Help (AHELP) on COMMAND JOURNALS
BUG=A COMMAND JOURNAL.  See Archon Help (AHELP) on COMMAND JOURNALS
TYPO=A COMMAND JOURNAL.  See Archon Help (AHELP) on COMMAND JOURNALS

NOPURGE=\
Command : NOPURGE\n\r\
Usage   : NOPURGE [PLAYER NAME]\n\r\
Example : nopurge bob\n\r\
Short(s): \n\r\
Makes a player inelligible for purging by the autopurge system.  Use LIST NOPURGE, \
or DESTROY NOPURGE for maintaining the list.


LINK=\
Command : LINK\n\r\
Usage   : LINK [ROOMID] [DIRECTION]\n\r\
Example : link midgaard#3001 north\n\r\
Example : link Smurfy Road east\n\r\
Example : link midgaard#3001#(3,2) north\n\r\
Short(s): \n\r\
A command for the linking of rooms to each other, including grid rooms.
	
LOAD=\
Command : LOAD\n\r\
Usage   : LOAD [OBJECT TYPE] [PATH/NAME]\n\r\
Example : load resource banned.ini\n\r\
Example : load ability /myclasses/blah.class\n\r\
Example : load weapon /myclasses/blah2.class\n\r\
Example : load class com.planet_ink.marble_mud.Items.Weapons.Sword.class\n\r\
Example : load weapon com/planet_ink/marble_mud/Items/Weapons/Sword.java\n\r\
Short(s): \n\r\
A command for the loading of resources, faction ini files, or class files of \
java or javascript.\n\r\
\n\r\
Use LIST RESOURCES to see a list of resources.\n\r\
\n\r\
For class files, the LIST command can also show whats already loaded.  This command \
will automatically attempt to unload a class if it is already loaded.  If the specified \
class is a java source file or javascript, it will attempt to compile it first.  \
For loading classes, the second parameter may be the word "class" and the system \
will attempt to correct your ambiguity.  If it is unable to determine the type of \
class being loaded, however, you may get an error.  It is therefore better just \
to use the load [CLASS-TYPE] syntax instead.
	
MODIFY=\
Command : MODIFY\n\r\
Usage   : MODIFY [ITEM TYPE] ... \n\r\
Example : modify room name The Grassy Knole\n\r\
Example : modify mob orc\n\r\
Example : modify item longsword\n\r\
Example : modify item "longsword@an orc"\n\r\
Example : modify jscript\n\r\
Example : modify news\n\r\
Short(s): \n\r\
A command for the modification of items, mobs, users, quests, rooms, polls, classes, races, \
news, areas, and exits. Enter MODIFY for more information on command usage.
	
I3=\
This refers to the InterMud3 system, which may or may not be \
available on your system.  Enter I3 by itself for a list of \
available commands.  For more help, enter HELP I3 LIST, HELP I3 CHANNELS, \
HELP I3 ADD, HELP I3 DELETE, HELP I3 LISTEN, HELP I3 LOCATE, HELP I3 SILENCE, \
or HELP I3 INFO.

I3_ADD=\
Command : I3 ADD\n\r\
Usage   : I3 ADD [REMOTE CHANNEL NAME]\n\r\
Example : i3 add BADCHAN\n\r\
Short(s): \n\r\
Sends an add-channel message to the InterMud3 router.  The channel \
listed must already appear in your marblemud.ini file.

I3_LISTEN=\
Command : I3 LISTEN\n\r\
Usage   : I3 LISTEN [REMOTE CHANNEL NAME]\n\r\
Example : i3 listen BADCHAN\n\r\
Short(s): \n\r\
Sends a listen-channel message to the InterMud3 router.  The channel \
listed must already appear in your marblemud.ini file.

I3_SILENCE=\
Command : I3 SILENCE\n\r\
Usage   : I3 SILENCE [REMOTE CHANNEL NAME]\n\r\
Example : i3 silence BADCHAN\n\r\
Short(s): \n\r\
Sends a no-listen-channel message to the InterMud3 router.  The channel \
listed must already appear in your marblemud.ini file.  This command \
will silence all traffic to your server from that channel.

I3_DELETE=\
Command : I3 DELETE\n\r\
Usage   : I3 DELETE [LOCAL CHANNEL NAME]\n\r\
Example : i3 delete BADCHAN\n\r\
Short(s): \n\r\
Sends a remove-channel message to the InterMud3 router.  The channel \
listed must already appear in your marblemud.ini file.

I3_LIST=\
Command : I3 LIST\n\r\
Usage   : I3 LIST\n\r\
Example : i3 list\n\r\
Short(s): \n\r\
Lists all the muds available on the InterMud3 channels.

I3_LOCATE=\
Command : I3 LOCATE\n\r\
Usage   : I3 LOCATE [NAME]\n\r\
Example : i3 locate bob\n\r\
Short(s): \n\r\
Sends a player locate message to the InterMud3 router, which will hopefully \
respond some day with the name of a mud where a player of the given name is \
located.

I3_INFO=\
Command : I3 INFO\n\r\
Usage   : I3 INFO [MUD NAME]\n\r\
Example : i3 info marblemud\n\r\
Short(s): \n\r\
Give some special information about the InterMud3 mud listed.

IDEA=\
Command : IDEA\n\r\
Usage   : IDEA [MESSAGE]/REVIEW (STARTING MSG)\n\r\
Example : idea nothing is spelled right in this room!\n\r\
Example : idea review\n\r\
Example : idea review 7\n\r\
Short(s): \n\r\
This command can be used to submit ideas to the system.  When \
the REVIEW parameter is given, the ideas will be iterated through \
one at a time to give the archon a chance to delete, comment on, \
or email each one.  An optional starting number can be given to REVIEW.

IMPORT=\
Command  : IMPORT\n\r\
Usage    : IMPORT (NOPROMPT) (NODELETE) (AREATYPE=TYPE) [FILE NAME(S)] \n\r\
Example  : import /areas/myarea.cmare\n\r\
Example  : import noprompt nodelete /areas/midgaard.are\n\r\
Example  : import areatype=stdthininstance /areas/midgaard.are /areas/school.are\n\r\
Example  : import noprompt /areas/areas.lst\n\r\
Example  : import noprompt /areas/\n\r\
Short(s) : \n\r\
The import command will allow you to import official marblemud \
area files, whose extension is "*.cmare"\n\r\
marblemud may also import, with varying levels of success, the "*.are" \
files used by other muds.  Some formats are better supported \
than others, so be sure to carefully examine the imported \
area afterwards.\n\r\
The import command will auto detect, based on the file given, \
whether the file refers to a marblemud area file, room file, \
a "*.are" from another mud, or a "*.lst" list of other area \
files.\n\r\
The marblemud "resources" directory is the default path.  Remember \
that all paths in marblemud treat the install directory as "root'. \
This means that the files being imported must be copied into a \
folder underneath your install directory before use.  See the help \
on VFS for more information on this concept.

MERGE=\
Command  : MERGE\n\r\
Usage    : MERGE (AREA/ROOM) (CHANGE=[FIELD,..]) (ON=[FIELD,..]) (IGNORE=[FIELD,..]) [PATH & FILE NAME]\n\r\
Usage    : MERGE (AREA/ROOM) DATABASE (MOBS/ITEMS/ROOMS) DBCLASS=[JAVACLASS] DBSERVICE=[DB SERVICE URL]\n\r\
         :       DBUSER=[USERNAME] DBPASS=[PASSWORD] (IGNORE=[FIELD,..]) (MASK=[ZAPPERMASK])\n\r\
Example  : merge /myfiles/myitems.cmare\n\r\
Example  : merge change=damage,level,ability /myfiles/myweapons.cmare\n\r\
Example  : merge area change=material ignore=level /myfiles/myweapons.cmare\n\r\
Example  : merge change=damage on=name /myfiles/weapons.cmare\n\r\
Example  : merge area database dbclass=com.mysql.jdbc.Driver dbservice=jdbc:mysql://localhost:3306/db\n\r\
         :            dbuser=username dbpass=password ignore="IMG,ATTACK" MASK="-NAMES +Bob"\n\r\
Short(s) : \n\r\
Allows you to selectively modify all instances of a mob or item in the world \
based on the contents of a CMARE file containing items or mobs, or another \
marblemud database. \n\r\
\n\r\
When using CMARE files, the files must be \
generated using the EXPORT (WORLD/AREA/ROOM) (ITEMS/WEAPONS) command. \
The first parameter specifies whether the items in the text file are to be \
merged with those in the entire world, in your current area, or just the room. \
The second parameter (CHANGE) is implied to be ALL unless specified otherwise. \
It denotes which fields in the existing items may be changed based on what \
changes are seen to the item inside the CMARE file.   The third parameter \
(ON) is implied to be ALL unless specified otherwise.  It denotes how an item \
in the CMARE file is matched with an existing item in your world.  If the \
listed fields from the CMARE file and the existing item are equal, the items \
will be considered a match for the purposes of merging.  The fourth parameter \
(IGNORE) is implied to be NONE unless specified otherwise.  It denotes \
exceptions to the (ON) parameter, namely which fields are allowed to differ \
between items in the CMARE file and an existing item in cases where they would \
otherwise be considered a match according to the (ON) parameter.  Matched \
items in your existing world, in every room, will be modified accordingly, and \
the room will be resaved to your database.  The log will reflect all changes \
made to your world.  Every room in every area in your world will be reloaded \
from the database prior to any evaluations or changes.\n\r\
\n\r\
When using a database as a source, the merge command will compare and match the \
database version of the room contents with the local world.  The user is then \
given the opportunity to make changes to the local world depending on differences. \
The merge requires DBCLASS, DBSERVICE, DBUSER, and DBPASS parameters be set.  The \
IGNORE parameters is a comma delimited list of fields to ignore when displaying \
differences.  To mask the types of objects checked, the user can specify mobs, items, \
or the whole rooms after the word database, and a zappermask can be included after the \
mask parameters.

EXPORT=\
Command : EXPORT\n\r\
Usage   : EXPORT (AREA/ROOM/WORLD/PLAYER) (DATA/ITEMS/MOBS/WEAPONS/ARMOR) ([FILE]/SCREEN/EMAIL)\n\r\
Example : export room myroom\n\r\
Example : export area /home/users/myarea\n\r\
Example : export area weapons /home/users/myarea\n\r\
Example : export area screen\n\r\
Example : export area email\n\r\
Example : export world data /exportfiles/\n\r\
Example : export player bob\n\r\
Short(s): \n\r\
The export command will generate the official marblemud area files, \
whose extension is "*.cmare".  This command may also be used to export \
individual rooms, player data, or unique items or mobs as well.  If the second parameter \
(ITEMS/MOBS/WEAPONS/etc) is NOT specified, export will produce full \
room data for the scope of the first parameter (AREA, ROOM, or WORLD). \
If the second parameter IS specified, then only the specified data will \
be generated.\n\r\
The results will be written to the file given in the last argument, or to the \
screen if "screen" is given as the last argument, or sent to your email address \
if that is enabled.  The extension need not be \
included, as marblemud will add it if not present.  If a directory name \
is given (no file name), the system will reference the AREA ARCHIVE file \
name for an Area, assuming EXPORT AREA or EXPORT WORLD is used. The default \
directory for this command is the marblemud root.

ORDER=\
Command : ORDER\n\r\
Usage   : ORDER [TARGET NAME] [COMMAND(S)]\n\r\
Example : order dog flee\n\r\
Short(s): \n\r\
This command will allow you to force a mob to perform any command \
listed in the COMMANDS or SOCIALS list.
	
POOF=\
Command : POOF\n\r\
Usage   : POOF\n\r\
Short(s): \n\r\
For players with access to the GOTO command, this command will allow the admin to change \
the messages seen when they leave and enter a room via GOTO.  The S-NAME, S-HIM-HER and \
other codes may be used so that the admins name is properly presented.  Remember to \
surround the codes with the less-than and greater-than tag markers!

PURGE=\
Command : PURGE\n\r\
Usage   : PURGE [ITEM TYPE] ... \n\r\
Example : purge orc\n\r\
Example : purge item longsword\n\r\
Example : purge item longsword@an orc\n\r\
Short(s): \n\r\
This command is a weak form of DESTROY, allowing only items and mobs to be \
destroyed.  Rejuvinating mobs will still rejuvinate when purge is used, unlike \
destroy.
	
SNOOP=\
Command : SNOOP\n\r\
Usage   : SNOOP [TARGET NAME]\n\r\
Example : snoop player\n\r\
Short(s): \n\r\
This command will allow you to watch a player play -- seeing everything \
they type in, and everything they read on their screen.
	
STAT=\
Command : STAT\n\r\
Usage   : STAT ((SKILL TYPE) [TARGET NAME])/([NUMBER] [DAYS/WEEKS/MONTHS/YEARS] (/SKILLUSE/QUEST))\n\r\
Example : stat\n\r\
Example : stat 2 weeks\n\r\
Example : stat tom\n\r\
Example : stat equipment bob\n\r\
Example : stat combat bob\n\r\
Example : stat inventory bob\n\r\
Example : stat questwins bob\n\r\
Example : stat tattoos bob\n\r\
Example : stat titles bob\n\r\
Example : stat scripts bob\n\r\
Example : stat roomsexplored bob\n\r\
Example : stat factions bob\n\r\
Example : stat spell bob\n\r\
Example : stat skill hassan\n\r\
Example : stat chant hassan\n\r\
Example : stat prayer hassan\n\r\
Short(s): \n\r\
This command serves two purposes.  The first is to allow you to view \
a usage statistics report on your mud.  Entering STAT alone allows you \
to see information gathered since midnight.  You may also enter a number \
and a scale (days, weeks, months, or years) to view information going \
farther back.\n\r\
\n\r\
STAT will also allow you to retreive basic stat information on a player \
or mob in the game.  Entering STAT and the players name brings up the \
most basic SCORE information.  Including a skill type before the name \
will list their abilities of that type.  Valid skill types include: SKILL, \
SPELL, PRAYER, SONG, TRAP, PROPERTY, "THIEF SKILL", LANGUAGE, CHANT, \
"COMMON SKILL", DISEASE, POISON.  You can also get special reports by \
entering one of the following before the name: EQUIPMENT, COMBAT, INVENTORY, \
QUESTWINS, TATTOOS, TITLES, SCRIPTS, WORLDEXPLORED, AREASEXPLORED, ROOMSEXPLORED, \
FACTIONS


SAVE=\
Command : SAVE\n\r\
Usage   : SAVE [ROOM, QUESTS, MOBS, ITEMS, USERS]\n\r\
Example : save room\n\r\
Short(s): \n\r\
A command to permanently save the contents of a room, the mobs \
in the room, the current quests list, or the users who are logged in.  \
The command will apply to the room in which your Character is located.

PAUSE=\
Command : PAUSE\n\r\
Usage   : PAUSE [ROOM/AREA/OBJECTNAME]\n\r\
Example : pause\n\r\
Example : pause area\n\r\
Example : pause orc\n\r\
Short(s): \n\r\
This very powerful and dangerous command allows you to suspend all thread and \
ticking operations in the entire mud.  It can be a quick and easy way to discern \
locked up threads, or to free up CPU time for other purposes.  Enter PAUSE alone \
to suspend and resume all threads, or specify room, area, or an object name \
to suspend the ticking of just that object.

SYSMSGS=\
Command : SYSMSGS\n\r\
Usage   : SYSMSGS\n\r\
Example : sysmsgs\n\r\
Short(s): \n\r\
A command to toggle debug mode, or extended messages.

AFTER=\
Command : AFTER\n\r\
Usage   : AFTER (EVERY/STOP/LIST) [NUMBER] [SECONDS/TICKS/MINUTES/HOURS] [COMMAND]\n\r\
Example : after 5 seconds smile\n\r\
Example : after every 5 seconds at bob smile\n\r\
Example : after 10 minutes shutdown noprompt\n\r\
Example : after stop\n\r\
Example : after list\n\r\
Short(s): \n\r\
A command to delay the execution of a command.  The every parameter \
may be used to make a command automatically recurring.  after stop should be \
used to cancel commands created with the every parameter.

TAKE=\
Command : TAKE\n\r\
Usage   : TAKE (ALL) [ITEM NAME] ([MOB NAME])\n\r\
Example : take all dagger Horice\n\r\
Example : take qp Horice\n\r\
Example : take all Horice\n\r\
Example : take pie Horice\n\r\
Short(s): \n\r\
This is A command that forces the specified mob or character \
to give item that is in his or her inventory or equipment to \
you.  If the item is inside a specified container, it will \
be retreived from the container.  The very special item name "qp" \
may be used to take Quest Points from players using this command. 

SHUTDOWN=\
Command : SHUTDOWN\n\r\
Usage   : SHUTDOWN (IN [NUMBER] [MINS/HOURS..]) (RESTART) (NOPROMPT) \n\r\
Example : shutdown\n\r\
Example : shutdown noprompt\n\r\
Example : shutdown in 10 minutes restart\n\r\
Short(s): \n\r\
With no argument, this command will bring down the marblemud server. \
With the restart argument, it will "bounce" (restart) the server. \
You can also specify how long before the shutdown will begin.  This \
will also cause periodic warnings to your players.

UNLINK=\
Command : UNLINK\n\r\
Usage   : UNLINK [DIRECTION]\n\r\
Example : unlink north\n\r\
Short(s): \n\r\
A command for the unlinking of rooms from each other.

GMODIFY=\
Command : GMODIFY\n\r\
Usage   : GMODIFY (AREA/ROOM/WORLD) [FIELD=VAL](&&/||[...]) (CHANGE=[FIELD=VAL])\n\r\
Example : gmodify area class=genmob&&name=the cityguard change=name=the guard\n\r\
Example : gmodify world class=[cs]GenMob&&name=[ss]city change=name=[ss]\n\r\
Example : gmodify ?\n\r\
Short(s): \n\r\
A command to select objects in a given area, room, or the whole world \
based on the specified field values, and optionally change some of \
those specified fields.\n\r\
\n\r\
Searching the entire world is implied, but the first parameter may be \
the word AREA or ROOM to narrow the search.  You may also enter WORLD \
to make the world search explicit.\n\r\
\n\r\
The next parameter is the search criteria.  \
The key phrase WHEN= may optionally precede it to \
make explicit that you are specifying the search criteria.  The search \
criteria fields may be separated by && strings to specify that all of the \
preceding criteria AND the next single criteria must be true.  The criteria \
fields may also be separated by || strings to specify that all of the preceding \
criteria OR the next single criteria may be true.  One of those strings must \
be present when specifying more than one criteria.\n\r\
\n\r\
Each field in the search criteria must be of the form FIELD=VALUE, FIELD!=VALUE, \
FIELD$VALUE, FIELD>VALUE, FIELD<VALUE, FIELD>=VALUE, or FIELD<=VALUE.  Where \
FIELD must be a valid search field.  Enter GMODIFY ? for a complete list of all \
valid fields.  Not all fields will apply to all object types, so take this into \
account especially when using < or != operators.  The operators are all normal \
except for the new one, $, which means that the value is really a regular expression. \
The VALUE portion of the criteria may be prefixed with modifiers, which include: \n\r\
[ss] to specify that the value refers to a substring of the fields whole value.\n\r\
[cs] to specify that the search is case sensitive (case insensitive is implied).\n\r\
\n\r\
The last parameter is the optional change specifications.  These specifications \
must be prefixed with the key phrase CHANGE=.  If these specifications are not \
included, GMODIFY will display the results of the search.  The change specifications \
are similar to the search criteria in that they consist of groupings of FIELD=VALUE \
separated by && strings.  Unlike search criteria, however, operators other than =, and \
strings other than || have no special meaning.  The fields, like in the search \
criteria, must be valid fields for the options selected by the search criteria.  The \
fields on the object will be changed to the specified value UNLESS the following \
conditions are met: the VALUE portion of a field is prefixed with the modifier [ss], \
and the VALUE portion of an identical field in the search criteria was also prefixed with \
the modifier [ss].  Under those special conditions, instead of substituting the entire \
field value on the object with the new value, ONLY the portion of the string selected \
in the search criteria will be substituted.

NOWIZINV=\
Command  : WIZARD INVISIBILITY\n\r\
Usage    : VISIBLE\n\r\
Example  : visible\n\r\
Short(s) : nowizinv\n\r\
Wizard Invisibility makes the invoker \
completely undetectable by other mobs or players.  This command \
turns wizard invisibility off.  See WIZINV for more information.

CHARGEN=\
Skill    : CHARGEN\n\r\
Usage    : CHARGEN\n\r\
Example  : chargen\n\r\
Short(s) : \n\r\
A little utility designed to give example characters \
of various levels, for comparison with MOBs of similar \
level.
	
GOTO=\
Skill    : GOTO\n\r\
Usage    : GOTO [ROOM ID/DESC/MOB/AREA]/PREVIOUS (!)\n\r\
Example  : goto Midgaard#3001\n\r\
Example  : goto #3001\n\r\
Example  : goto north\n\r\
Example  : goto hassan\n\r\
Example  : goto temple of mota\n\r\
Example  : goto midgaard\n\r\
Example  : goto previous\n\r\
Short(s) : \n\r\
The invoker and his or her followers will be transported, \
with very little fanfare, to the destination listed.  This \
ability is not magical in nature, and is thus not affected \
by no-teleport areas and rooms.  Appending an exclaimation \
point to the room will ADD fanfare to the entrance.

TRANSFER=\
Skill    : TRANSFER\n\r\
Usage    : TRANSFER [ALL/[MOB NAME]/"ITEMS X"] [ROOM ID/DESC/MOB/AREA]\n\r\
Example  : transfer all Midgaard#3001\n\r\
Example  : transfer all midgaard\n\r\
Example  : transfer all north\n\r\
Example  : transfer bob #3001\n\r\
Example  : transfer smurf hassan\n\r\
Example  : transfer bobbyjoe temple of mota\n\r\
Example  : transfer "item sword" north\n\r\
Example  : transfer "all item sword" north\n\r\
Example  : transfer "all items" north\n\r\
Short(s) : \n\r\
The targets and their followers will be transported, \
with very little fanfare, to the destination listed.  This \
ability is not magical in nature, and is thus not affected \
by no-teleport areas and rooms.  If all or item is used, it will refer \
only to those in the same room as the admin.  Otherwise, the \
admins present area will be checked for all instances of the name \
and transfers all of them.  If none are found in the same area, the \
whole world will be checked.

SESSIONS=\
Skill    : SESSIONS\n\r\
Usage    : SESSIONS (STATUS/VALID/NAME/IP/IDLE)\n\r\
Available: \n\r\
Example  : sessions\n\r\
Example  : sessions name\n\r\
Short(s) : \n\r\
Lists the players online, their idle time, status, and ip address.  An \
optional parameter may be given to sort by one of the fields.


WIZEMOTE=\
Command : WIZEMOTE\n\r\
Usage   : WIZEMOTE [ALL/HERE/ROOM NAME/AREA NAME/CLAN NAME/PLAYER NAME] message\n\r\
Example : wizemote all You are having fun!\n\r\
Example : wizemote here We are having fun!\n\r\
Example : wizemote bob You are having more fun though.\n\r\
Example : wizemote "Death Area" Something bad happened here!\n\r\
Example : wizemote "Death Area#5320" Something bad happened there!\n\r\
Example : wizemote "The Artisans" Something bad happened to your clan!\n\r\
Short(s): \n\r\
A command to send emote-type messages to everyone in an \
area, a room, a clan, or to a specific player, or to everyone everywhere.

POSSESS=\
Skill    : POSSESS\n\r\
Usage    : POSSESS [MOB NAME]\n\r\
Example  : possess dragon\n\r\
Short(s) : \n\r\
This command will allow your character to possess and control \
any given mob.  That mob will be controlled \
as if it were your own character.  Use the QUIT command to return \
to your own characters body.  Should the mob die, you will be \
returned automatically.  POSSESS does not transfer your security \
levels to the possessed mob UNLESS you have turned on your SYSMSGS \
flag before possessing.
	
RESTRING=\
Command : RESTRING\n\r\
Usage   : RESTRING [ITEM NAME]\n\r\
Example : restring longsword\n\r\
Example : restring "longsword@an orc"\n\r\
Short(s): \n\r\
This command is a weak for of MODIFY.  It allows you to modify an items \
name, display text, and description.

TASK=\
Command : TASK\n\r\
Usage   : TASK [MESSAGE]/REVIEW (STARTING MSG)\n\r\
Example : task nothing is spelled right in this room!\n\r\
Example : task review\n\r\
Example : task review 7\n\r\
Short(s): \n\r\
This command can be used to submit builder tasks to the system.  When \
the REVIEW parameter is given, the tasks will be iterated through \
one at a time to give the builder a chance to delete, comment on, \
or email each one.  An optional starting number can be given to REVIEW. \
The player must be either an Archon, or a player with the TASKS security \
string to use this feature.

TRAILTO=\
Command : TRAILTO\n\r\
Usage   : TRAILTO (CONFIRM) (AREANAMES) (IGNOREROOMS=[ROOMS LIST]) [AREA NAME] /[ROOM ID] /EVERYROOM /EVERYAREA\n\r\
Example : trailto MyArea#394\n\r\
Example : trailto everyarea\n\r\
Example : trailto confirm areanames "ignorerooms=myarea#10,myarea#20" everyarea\n\r\
Short(s): \n\r\
This command shows the directions one must travel to get from their current \
position to the destination given.
	
TYPO=\
Command : TYPO\n\r\
Usage   : TYPO [MESSAGE]/REVIEW (STARTING MSG)\n\r\
Example : typo nothing is spelled right in this room!\n\r\
Example : typo review\n\r\
Example : typo review 7\n\r\
Short(s): \n\r\
This command can be used to submit typos to the system.  When \
the REVIEW parameter is given, the typos will be iterated through \
one at a time to give the archon a chance to delete, comment on, \
or email each one.  An optional starting number can be given to REVIEW.

SHELL=\
Command : SHELL\n\r\
Usage   : SHELL [COMMAND] [PARAMETERS]\n\r\
Example : shell\n\r\
Example : shell ?\n\r\
Example : shell directory\n\r\
Example : shell cd /resources/text\n\r\
Example : shell copy thisfile.txt ::\n\r\
Example : shell del ::thisfile.txt\n\r\
Example : shell edit thisfile.txt\n\r\
Short(s): .\n\r\
This command allows the archon, and users with appropriate FS: and/or VFS: security \
flags to access the file system and/or the virtual file system.  See help on CMFS \
or VFS for the difference between the two.\n\r\
\n\r\
The commands are case-insensitive, except where dealing with the local file system, where \
it may be case-sensitive depending upon the host system.  As mentioned in the CMFS docs, \
filenames and paths may be preceded by a :: string to denote forced VFS access, or // \
to denote forced local file-system access.  When neither is specified for a given \
shell command, the VFS file is always preferred. The / character is always used to separate \
directory paths and folders, such as /resources/text/down.txt would refer to the file \
down.txt in the text folder, which in turn is in the resources folder, which in turn is \
located in the root directory.\n\r\
\n\r\
The shell command may be entered with no parameter to see the players current directory. \
When viewing directories, a "-" character will precede a file which exists only in the \
VFS system.  A "+" character will precede a file which exists in both the local file \
system and the VFS system.  Since folders always exist in the VFS, they will always \
be seen with the "+" character preceding them.\n\r\
\n\r\
The shell command can be used to create directories, delete files or directories, \
copy files, search for files with given names, search inside text files for a \
text string, display a text file, or edit a text file.  Many commands support a \
mask to limit the files displayed. The mask may include "*" characters anywhere \
in the string to match 0 or more unknown characters in the filenames.  A "?" \
character always matches a single unknown character in a filename. \n\r\
\n\r\
See HELP CMFS for more information on marblemuds file system.

	
WHERE=\
Command : WHERE\n\r\
Usage   : WHERE (AREA) (ROOM/MOB/ITEM/MOBMASK/ITEMMASK) ([MASK])\n\r\
Example : where\n\r\
Example : where dog\n\r\
Example : where area item knife\n\r\
Example : where area mobmask -race +orc -levels +>=10\n\r\
Example : where !\n\r\
Short(s): \n\r\
Without an argument, this command displays the names and locations of \
all players online.  With the ROOM, MOB, ITEM, or no argument, it will show \
all mobs, rooms, and/or items the match the given key words in the mask, \
along with room locations.  With the MOBMASK, ITEMMASK arguments, it will \
show all mobs or items that match the given Zapper Mask (See ZAPPERMASKS). \
The arguments may be qualified with AREA to show only the Archons current area. \
The argument ! will show the mundane/player version of the WHERE command.
	
WIZINVISIBLE=WIZINV
WIZINV=\
Skill    : WIZARD INVISIBILITY\n\r\
Usage    : WIZINV (OFF/NOCLOAK)\n\r\
Example  : wizinv\n\r\
Example  : wizinv nocloak\n\r\
Short(s) : \n\r\
Wizard Invisibility makes the invoker \
completely undetectable by other mobs or players.  In addition, \
the invoker will not hunger or thirst, may pass through any \
terrain unhindered (except doors), and is invulnerable to sleep \
spells.  Lastly, unless the nocloak parameter is specified, the \
Archon is completely cloaked as per the CLOAK command.

XML=\
Command  : \n\r\
Usage    : By MUDGrinder only\n\r\
Example  : \n\r\
Short(s) : \n\r\
This command exist to fascillitate the transfer of information \
between MUDGrinder and marblemud.  Do not use this command for \
any reason.

UNLOAD=\
Command  : UNLOAD\n\r\
Usage    : UNLOAD HELP/CLASS/USER/FACTION\n\r\
Usage    : UNLOAD INIFILE/ALL/[RESOURCE NAME]\n\r\
Example  : unload help\n\r\
Example  : unload all\n\r\
Example  : unload armorsmith\n\r\
Example  : unload class Thief_Search\n\r\
Example  : unload user joe\n\r\
Short(s) : \n\r\
Unloads most resource text, cached users, class objects, \
marblemud.ini, lists.ini, and help files for easy refreshing.

DUMPFILE=\
Command  : DUMPFILE\n\r\
Usage    : DUMPFILE (RAW) [USER/ALL] [FILENAME]\n\r\
Example  : dumpfile all classes.txt\n\r\
Short(s) : \n\r\
Unloads most resource text and help files for easy refreshing.

JRUN=\
Command  : JRUN\n\r\
Usage    : JRUN [FILENAME] [PARM1] ... \n\r\
Example  : jrun resources/myscript.js parm1 parm2\n\r\
Short(s) : \n\r\
Runs the given file as Javascript.  See the Programming Guide for more information \
on how to write Javascript for marblemud.

MPRUN=\
Command  : MPRUN\n\r\
Usage    : MPRUN ([USER]:[PASS]) [SCRIPT]\n\r\
Example  : mprun once_prog;mpecho hello!;~;\n\r\
Example  : mprun load=mine.script\n\r\
Example  : mprun archons:password once_prog;mpecho hello!;~;\n\r\
Short(s) : \n\r\
Runs the given script as per the Scriptable behavor.  Since Scriptable scripts are \
event-triggered, any commands executed must be in a ONCE_PROG trigger (or perhaps \
a RAND_PROG).\n\r\
\n\r\
For use as part of automated testing, MPRUN can also be executed by unauthorized users \
so long as they know the username and password of an authorized user.  Any failed attempts \
to use this command will cause the user to be marked as unable to use this command for \
two minutes.

WIZINFO=\
Command : WIZINFO\n\r\
Short(s): \n\r\
The automatic information channel available to admins and \
area admins. Turned off with NOWIZINFO

NOWIZINFO=\
Command : NOWIZINFO\n\r\
Usage   : NOWIZINFO\n\r\
Example : nowizinfo\n\r\
Short(s): \n\r\
Turn off the automatic information channel available to admins and \
area admins. 

MASKS=\
In numerous parameters, places, and input fields, marblemud will ask you for something \
called a "Zapper Mask".  The mask is used to help select particular mobs, items, etc \
from the universe of available selections by "filtering out" those you don't want. \
For example, if you wanted to only select mobs named Bob, you would compose a mask \
that Disallows non-mobs, and Disallows things that dont have the name Bob.  This is \
done using the Zapper Mask syntax, shown below:\n\r\
<ZAP=disallow>

ZAPPER_MASKS=MASKS

ABILITY_PREREQS=\
Ability Prerequisites is a comma delimited list of skills or skill masks that describe \
what skills or set of skills must be learned, and at what optional proficiency, before \
a player of a given class can learn that skill.  The list is comma delimited, and each \
item in the list consists of a valid Ability ID (like Spell_Fireball), or a wildcard \
mask of Ability_IDs (like Spell_F* to select all Ability IDs beginning with Spell_F). \
Following the Ability_ID is an optionally number in parenthesis, which would represent \
the minimum proficiency of the aforementioned Ability that is required.\n\r\
Example:\n\r\
Skill_Trip(50),Fighter_*(10)\n\r\
The above means that the current ability requires that the player have Trip at 50% \
proficiency and any Fighter skill at 10% proficiency or better.

NEWS=The channel where logon news is shown.  Try LIST NEWS and MODIFY NEWS.


