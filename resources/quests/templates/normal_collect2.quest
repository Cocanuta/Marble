#!QUESTMAKER_START_SCRIPT Normal Collect #2
#An existing mob in your world needs one or more items which you will create brought back to him/her. 
#The items will be scattered among rooms or areas which you will designate.
#A reward is given upon completion of the task and returning the items to the announcer.
#
#!QUESTMAKER_PAGE Quest Name/Criteria
#Enter the unique name and player criteria for your new quest.
#
#Quest ID:
#Enter a unique name/id for your quest:
#$QUEST_ID=$UNIQUE_QUEST_NAME=normal_collect_2
#
#Quest Name:
#Enter a friendly displayable name for your quest:
#$QUEST_NAME=$STRING=Normal Collect #2
#
#Quest-Player Criterium:
#You may leave this entry blank, or enter a Zapper Mask to describe what
#kinds of players may participate in this quest.  You can use this to set
#race, level, or other requirements.
#$QUEST_CRITERIA=$ZAPPERMASK
#
#!QUESTMAKER_PAGE Specify the Announcer
#The Announcer is the mob who will be wanting the items collected. This must
#be an existing mob in your world.  
#
#Announcer Area/Room: 
#Specify below the name of the area that your announcer mob will be located
#in and/or the room in which the mob can be found.  You may leave both blank
#to force the quest manager to find the mob somewhere in the world, but this
#will hurt the performance of your mud, so use with care.
#Use double-quotes around multi-word areas and room ids/names.
#  
#Announcer Area:
#$ANNOUNCER_AREA=($AREA)
#Announcer Room ID:
#$ANNOUNCER_ROOM=($ROOMID)
#
#Announcer mob name: 
#Specify the name of the mob who will act as the announcer mob.  
#Use double-quotes around multi-word names.
#If you specified an area or room above, then the mob must be located there.
#You may optionally have the quest manager select a 'random' mob by entering
#a mob name of ANY MASK= followed by a Zapper Mask (see help on 
#ZAPPERMASKS for information on zapper mask syntax).
#Remember, if the quest manager can not find your mob, the quest will not
#be started.
#$ANNOUNCER_NAME=$NAME
#
#!QUESTMAKER_PAGE Announcer speaches
#Specify here some optional things to say for the announcer before and after the quest.
#
#Announcer Notification: 
#Specify some additional bit of speech the announcer mob will say to players when they enter the room.
#$QUEST_NOTIFYSTRING=($LONG_STRING)=I have some things I need collected
#
#Announcer Instructions: 
#Specify some additional bit of speech the announcer mob will say to players when the quest is accepted.
#$QUEST_INSTRUCTIONSSTRING=($LONG_STRING)=I need you to collect some things.  They are somewhere around somewhere.
#
#Announcer success:
#Select what tthe announcer will say when a player returns to him after collecting the items.
#$QUEST_WINSPEECH_TEXT=($LONG_STRING)=Congratulations!
#
#!QUESTMAKER_PAGE Specify the Holders
#The Holders are the rooms where the items to collect may be found. These must
#be existing rooms in your world.  The items are created and destroyed whenever
#the quest player enters/exits a valid room, so spells like Locate Object will
#do the player no good.
#
#Holder Rooms: 
#Specify the rooms that your items will possibly be found in.
#Use double-quotes around multi-word areas and room ids/names.
#Use the keyword ANY to specify a single random area or room, or
#the keyword ALL to specify ALL areas or rooms.
#
#Items Area:
#$HOLDER_AREAS=($AREA)
#Items Rooms:
#$HOLDER_ROOMS=($ROOMID)
#
#!QUESTMAKER_PAGE Specify the Collectables
#The Collectables are the items that will be given to holders you specified.
#
#Collectables items: 
#Specify the items who will act as the collectable item or items.
#$COLLECTABLES_ITEMS=$ITEMXML_ONEORMORE
#
#Collectables chance:
#Specify the percent chance that an item will be found in a particular room.
#$COLLECTABLES_CHANCE=($EXPRESSION)=10
#
#Num Collectables:
#Specify how many of the collectable items must be collected to complete the quest.
#$NUM_COLLECTABLES=($EXPRESSION)=3
#
#!QUESTMAKER_PAGE Quest Completion
#Select some rewards for bringing back the items.
#
#Quest Point?
#$QUEST_POINT=$CHOOSE=YES,NO
#Amount of money (an amount, or leave blank):
#$GOLD=($EXPRESSION)
#Amount of experience points, blank for none, or a number% for percent of exp to next level:
#$EXP=($STRING)=10%
#
#Player Faction to give to or take from:
#$FACTION=($FACTION)
#If you selected a faction above, enter a new numeric amount, 
#or enter +value to add, or --value to subtract:
#$NUMFACTION=($STRING)
#
#Select whether a player may complete this quest multiple times:
#$MULTIPLE=$CHOOSE=YES,NO
#
#!QUESTMAKER_END_SCRIPT Normal Collect #2

set name $QUEST_ID
set display $QUEST_NAME
set author $#AUTHOR

set wait 1
set interval 1
quiet

set area $ANNOUNCER_AREA
set room $ANNOUNCER_ROOM
set mobgroup
set mob $ANNOUNCER_NAME
give stat keyplayer true
give script LOAD=$QUEST_ID_announcer.script

set mobgroup
set mob
set item
set room
set area
import items $QUEST_ID_items.xml
set itemgroup loadeditems
set item

set room
set area
set areagroup $HOLDER_AREAS
set roomgroup $HOLDER_ROOMS

set duration 0

<?xml version="1.0"?>
<FILE><NAME>$QUEST_ID_items.xml</NAME><DATA><ITEMS>$COLLECTABLES_ITEMS</ITEMS></DATA></FILE>
<FILE><NAME>$QUEST_ID_announcer.script</NAME>
<DATA>
ONCE_PROG 100
~

ALL_GREET_PROG 100
    if ISLIKE($n '$QUEST_CRITERIA') and ISPC($n) AND !QUESTSCRIPTED($n *)
        if EVAL('$MULTIPLE' == 'YES') OR !QUESTWINNER($n *)
            sayto "$n" $QUEST_NOTIFYSTRING -- just say 'i accept $QUEST_NAME' to take on this quest.
        endif
    endif
~

GIVE_PROG all
    IF QUESTSCRIPTED($n *) AND ISLIKE($n '$QUEST_CRITERIA') and ISPC($n)
        if questobj($o *) OR QUESTSCRIPTED($o *)
            mpsetvar $n $QUEST_ID_RETURNED ++
            mpjunk $o
            if var($n $QUEST_ID_RETURNED >= $NUM_COLLECTABLES)
                if EVAL('$EXP' != '')
                    mpexp $n $EXP
                endif
                if EVAL('$FACTION' != '')
                    mpfaction $n $FACTION $NUMFACTION
                endif
                if EVAL('$QUEST_POINT' == 'YES') AND !QUESTWINNER($n *)
                    mpoload QuestPoint
                    give "a quest point" "$n"
                endif
                if EVAL('$GOLD' != '') AND EVAL('$GOLD' > 0)
                    mpoload $GOLD
                    give $GOLD "$n"
                endif
                mpquestwin $n *
                sayto $n $QUEST_WINSPEECH_TEXT
                mpendquest $n
				mpqset * STATISTICS SUCCESS
            else
                sayto "$n" That's $<$n $QUEST_ID_RETURNED>/$NUM_COLLECTABLES.
                mpsetvar $i PROGRESS Picked up: $<$i $QUEST_ID_GOT>/$NUM_COLLECTABLES, Returned: $<$i $QUEST_ID_RETURNED>/$NUM_COLLECTABLES
            endif
        else
            sayto "$n" What's this?
            give "$o" "$n"
        endif
    else
        sayto "$n" What's this?
        give "$o" "$n"
    endif
~

SPEECH_PROG p i accept $QUEST_NAME
    if ISLIKE($n '$QUEST_CRITERIA') and ISPC($n)
        if  EVAL('$MULTIPLE' == 'YES') OR !QUESTWINNER($n *)
            if !QUESTSCRIPTED($n *)
                sayto "$n" $QUEST_INSTRUCTIONSSTRING
				mpqset * STATISTICS ACCEPTED
                mpscript $n INDIVIDUAL SAVABLE LOAD=$QUEST_ID_playertrack.script
            else
                sayto "$n" Yes, yes, I know .. now off with you.
            endif
        endif
    endif
~
</DATA></FILE>
<FILE><NAME>$QUEST_ID_playertrack.script</NAME>
<DATA>
ONCE_PROG 100
    mpsetvar $i INSTRUCTIONS $QUEST_INSTRUCTIONSSTRING
    mpsetvar $i $QUEST_ID_GOT 0
    mpsetvar $i $QUEST_ID_RETURNED 0
    mpsetvar $i $QUEST_ID_ROOMLIST
    mpsetvar $i $QUEST_ID_LASTITEM
    mpsetvar $i $QUEST_ID_LASTROOM
    mpsetvar $i PROGRESS Picked up: $<$i $QUEST_ID_GOT>/$NUM_COLLECTABLES, Returned: $<$i $QUEST_ID_RETURNED>/$NUM_COLLECTABLES
~

CNCLMSG_PROG ENTER ALL
    if EVAL($n == $i)
    mpargset $g $%INROOM($t)%
    if QUESTROOM($g *) 
        if EVAL('$<$i $QUEST_ID_LASTROOM>' != '') AND EVAL('$<$i $QUEST_ID_LASTITEM>' != '')
            mpat '$<$i $QUEST_ID_LASTROOM>' mppurge room '$<$i $QUEST_ID_LASTITEM>'
            mpsetvar $i $QUEST_ID_LASTITEM
            mpsetvar $i $QUEST_ID_LASTROOM
        endif
        if !STRIN('$<$i $QUEST_ID_ROOMLIST>' $g)
            if rand($COLLECTABLES_CHANCE) 
                mpat '$g' mpoloadroom fromfile $QUEST_ID_items.xml any
                mpsetvar $i $QUEST_ID_LASTITEM $b
                mpsetvar $i $QUEST_ID_LASTROOM $g
            endif
            mpsetvar $i $QUEST_ID_ROOMLIST $<$i $QUEST_ID_ROOMLIST> "$g"
        endif
    endif
    endif
~

EXECMSG_PROG GET ALL
    if questobj($t *) and QUESTSCRIPTED($n *) and EVAL($n == $i)
        MPSETVAR $n $QUEST_ID_GOT ++
        mpechoat $n Picked up: $<$n $QUEST_ID_GOT>/$NUM_COLLECTABLES.
        mpsetvar $i PROGRESS Picked up: $<$i $QUEST_ID_GOT>/$NUM_COLLECTABLES, Returned: $<$i $QUEST_ID_RETURNED>/$NUM_COLLECTABLES
    endif
    
~
EXECMSG_PROG DROP ALL
    if questobj($t *) and QUESTSCRIPTED($n *) and EVAL($n == $i)
        MPSETVAR $n $QUEST_ID_GOT --
        mpechoat $n Picked up: $<$n $QUEST_ID_GOT>/$NUM_COLLECTABLES.
        mpsetvar $i PROGRESS Picked up: $<$i $QUEST_ID_GOT>/$NUM_COLLECTABLES, Returned: $<$i $QUEST_ID_RETURNED>/$NUM_COLLECTABLES
    endif
    
~
</DATA></FILE>