#!QUESTMAKER_START_SCRIPT Normal Killer #1
#An existing mob in your world needs one or more other existing mobs killed. 
#A reward is given upon completion of the task and returning to the announcer.
#
#!QUESTMAKER_PAGE Quest Name/Criteria
#Enter the unique name and player criteria for your new quest.
#
#Quest ID:
#Enter a unique name/id for your quest:
#$QUEST_ID=$UNIQUE_QUEST_NAME=normal_killer_1
#
#Quest Name:
#Enter a friendly displayable name for your quest:
#$QUEST_NAME=$STRING=Normal Killer #1
#
#Quest-Player Criterium:
#You may leave this entry blank, or enter a Zapper Mask to describe what
#kinds of players may participate in this quest.  You can use this to set
#race, level, or other requirements.
#$QUEST_CRITERIA=$ZAPPERMASK
#
#!QUESTMAKER_PAGE Specify the Announcer
#The Announcer is the mob who will be wanting the other mobs killed. This must
#be an existing mob in your world.  
#
#Announcer Area/Room: 
#Specify below the name of the area that your announcer mob will be located
#in and/or the room in which the mob can be found.  You may leave both blank
#to force the quest manager to find the mob somewhere in the world, but this
#will hurt the performance of your mud, so use with care.
#Use double-quotes around multi-word areas and room ids/names.
#  
#Announcer Area:
#$ANNOUNCER_AREA=($AREA)
#Announcer Room ID:
#$ANNOUNCER_ROOM=($ROOMID)
#
#Announcer mob name: 
#Specify the name of the mob who will act as the announcer mob.  
#Use double-quotes around multi-word names.
#If you specified an area or room above, then the mob must be located there.
#You may optionally have the quest manager select a 'random' mob by entering
#a mob name of ANY MASK= followed by a Zapper Mask (see help on 
#ZAPPERMASKS for information on zapper mask syntax).
#Remember, if the quest manager can not find your mob, the quest will not
#be started.
#$ANNOUNCER_NAME=$NAME
#
#!QUESTMAKER_PAGE Announcer speaches
#Specify here some optional things to say for the announcer before and after the quest.
#
#Announcer Notification: 
#Specify some additional bit of speech the announcer mob will say to players when they enter the room.
#$QUEST_NOTIFYSTRING=($LONG_STRING)=I have someones I need killed!  Are you game?
#
#Announcer Instructions: 
#Specify some additional bit of speech the announcer mob will say to players when the quest is accepted.
#$QUEST_INSTRUCTIONSSTRING=($LONG_STRING)=I need you to kill some folks.  They are somewhere around somewhere.  Just beat them senseless.
#
#Announcer success:
#This is what the announcement says when the player returns after finishing the quest.
#$QUEST_WINSPEECH_TEXT=($LONG_STRING)=Congratulations! They're dead!
#
#!QUESTMAKER_PAGE Specify the Killable Mob or Mobs
#The Killables are the mob or mobs which must be defeated.
#
#Killable mobs: 
#Specify below the mobs that the player must kill to get credit for this quest.
#
#Killables mob names: 
#Specify the mobs who will act as the killable mob or mobs.  
#See help on ZAPPERMASK for information on zapper mask syntax.
#$KILLABLES_MASK=$ZAPPERMASK
#
#Killables attack:
#Will the mobs attack if they spot the player?  Keep in mind this is above and
#beyond any aggressive behaviors they may have, and will neither modify or 
#supress their natural aggressive behaviors.
#$KILLABLES_ATTACK=$CHOOSE=NO-USE-DEFAULT_BEHAVIOR,YES-ATTACK-ON-SIGHT
#
#Num Killables:
#Specify how many of the killable mobs must be killed.  Make sure there are 
#enough of them in your world to make this goal reachable!
#$NUM_KILLABLES=($EXPRESSION)=1
#
#Killables response: 
#You may optionally specify some additional bit of speech the killables 
#mobs will say to the players when they enter the room with them. 
#$KILLABLES_RESPONSE=($STRING)=So, you've come for me.  Come and get me.
#
#!QUESTMAKER_PAGE Quest Completion
#Select some rewards for killing the mobs:
#
#Quest Point?
#$QUEST_POINT=$CHOOSE=YES,NO
#Amount of money (an amount, or leave blank):
#$GOLD=($EXPRESSION)
#Amount of experience points, blank for none, or a number% for percent of exp to next level:
#$EXP=($STRING)=10%
#
#Player Faction to give to or take from:
#$FACTION=($FACTION)
#If you selected a faction above, enter a new numeric amount, 
#or enter +value to add, or --value to subtract:
#$NUMFACTION=($STRING)
#
#Select whether a player may complete this quest multiple times:
#$MULTIPLE=$CHOOSE=YES,NO
#
#!QUESTMAKER_END_SCRIPT Normal Killer #1

set name $QUEST_ID
set display $QUEST_NAME
set author $#AUTHOR

set wait 1
set interval 1
quiet

set area $ANNOUNCER_AREA
set room $ANNOUNCER_ROOM
set mobgroup
set mob $ANNOUNCER_NAME
give stat keyplayer true
give script LOAD=$QUEST_ID_announcer.script

set duration 0

<?xml version="1.0"?>
<FILE><NAME>$QUEST_ID_announcer.script</NAME>
<DATA>
ALL_GREET_PROG 100
IF QUESTSCRIPTED($n *)
	if var($n $QUEST_ID_KILLED >= $NUM_KILLABLES)
		if EVAL('$EXP' != '')
			mpexp $n $EXP
		endif
		if EVAL('$FACTION' != '')
			mpfaction $n $FACTION $NUMFACTION
		endif
		if EVAL('$QUEST_POINT' == 'YES') AND !QUESTWINNER($n *)
			mpoload QuestPoint
			give "a quest point" "$n"
		endif
		if EVAL('$GOLD' != '') AND EVAL('$GOLD' > 0)
			mpoload $GOLD
			give $GOLD "$n"
		endif
		mpquestwin $n *
		sayto $n $QUEST_WINSPEECH_TEXT
		mpendquest $n
		mpqset * STATISTICS SUCCESS
	endif
else
	if ISLIKE($n '$QUEST_CRITERIA') and ISPC($n) and !QUESTSCRIPTED($n *)
		if EVAL('$MULTIPLE' == 'YES') OR !QUESTWINNER($n *)
			sayto "$n" $QUEST_NOTIFYSTRING -- just say 'i accept $QUEST_NAME' to take on this quest.
		endif
	endif
endif
~

SPEECH_PROG p i accept $QUEST_NAME
	if ISLIKE($n '$QUEST_CRITERIA') and ISPC($n) and !QUESTSCRIPTED($n *)
		if  EVAL('$MULTIPLE' == 'YES') OR !QUESTWINNER($n *)
			mpqset * STATISTICS ACCEPTED
			sayto "$n" $QUEST_INSTRUCTIONSSTRING
            mpscript $n INDIVIDUAL SAVABLE LOAD=$QUEST_ID_playertrack.script
		endif
	endif
~
</DATA></FILE>
<FILE><NAME>$QUEST_ID_playertrack.script</NAME>
<DATA>
ONCE_PROG 100
    mpsetvar $i INSTRUCTIONS $QUEST_INSTRUCTIONSSTRING
~

GREET_PROG 100
    if EVAL('$KILLABLES_ATTACK' == 'YES-ATTACK-ON-SIGHT')
    	if ISLIKE($n $KILLABLES_MASK)
            mpforce $n kill $i
    	endif
    endif
~

ENTRY_PROG 100
    if INROOM($i == $g)
    	for $0 = 1 to '$%NUMMOBSROOM(*)%'
    		if ISLIKE('$%ROOMMOB($0)%' $KILLABLES_MASK)
    			mpforce '$%ROOMMOB($0)%' sayto "$i" $KILLABLES_RESPONSE
                if EVAL('$KILLABLES_ATTACK' == 'YES-ATTACK-ON-SIGHT')
                    mpforce '$%ROOMMOB($0)%' kill $i
                endif
    		endif
    	next
    endif
~
	
EXECMSG_PROG STO=DEATH ALL
	if ISNPC($n) AND ISLIKE($n $KILLABLES_MASK)
		mpsetvar $i $QUEST_ID_KILLED ++;
		if EVAL($NUM_KILLABLES > 1)
			mpechoat $i Killed $<$i $QUEST_ID_KILLED>/$NUM_KILLABLES
		else
		endif
		mpsetvar $i PROGRESS Killed $<$i $QUEST_ID_KILLED>/$NUM_KILLABLES
	endif
~
</DATA></FILE>